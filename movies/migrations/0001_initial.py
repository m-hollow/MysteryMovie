# Generated by Django 3.1.2 on 2020-10-12 22:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('year', models.PositiveIntegerField(null=True)),
                ('watched', models.BooleanField(default=True)),
                ('date_watched', models.DateTimeField(null=True)),
                ('chosen_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chosen_movie', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['date_watched'],
            },
        ),
        migrations.CreateModel(
            name='Trophy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('condition', models.CharField(max_length=1000)),
                ('point_value', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='TrophyProfileDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_awarded', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='auth.user')),
                ('correct_guess_points', models.PositiveSmallIntegerField(default=0, null=True)),
                ('known_movie_points', models.PositiveSmallIntegerField(default=0, null=True)),
                ('unseen_movie_points', models.PositiveSmallIntegerField(default=0, null=True)),
                ('trophy_points', models.PositiveSmallIntegerField(default=0, null=True)),
                ('trophies', models.ManyToManyField(related_name='related_profiles', through='movies.TrophyProfileDetail', to='movies.Trophy')),
            ],
        ),
        migrations.CreateModel(
            name='UserMovieDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_user_movie', models.BooleanField(default=False)),
                ('seen_previously', models.BooleanField(default=False)),
                ('heard_of', models.BooleanField(default=False)),
                ('star_rating', models.PositiveSmallIntegerField(choices=[(1, 'The Absolute Worst...(One Star)'), (2, 'Very Bad...(Two Stars)'), (3, 'It was alright...(Three Stars)'), (4, 'It was quite good...(Four Stars)'), (5, 'Wow, it was amazing!...(Five STars)')], default=3)),
                ('comments', models.TextField(default='', max_length=1000)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user_guess', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_via_guess', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='trophyprofiledetail',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.userprofile'),
        ),
        migrations.AddField(
            model_name='trophyprofiledetail',
            name='trophy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.trophy'),
        ),
        migrations.AddField(
            model_name='movie',
            name='users',
            field=models.ManyToManyField(related_name='related_movies', through='movies.UserMovieDetail', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='usermoviedetail',
            constraint=models.UniqueConstraint(fields=('user', 'movie'), name='unique_user_movie_pairs'),
        ),
    ]
